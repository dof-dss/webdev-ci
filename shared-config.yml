version: 2.1

# PARAMETERS: injected into pipelines and continuation orb will stitch together at runtime.
parameters:
  php_version:
    type: string
    default: "8.3"
  drupal_core_version:
    type: string
    default: "10.4"
  coding_standards_dirs:
    type: string
    default: ""
  deprecated_code_dirs:
    type: string
    default: ""
  ssh_fingerprint:
    type: string 
    default: ""

jobs:
  build:
    parameters:
      php_version:
        type: string
      ssh_fingerprint:
        type: string
    docker:
      - image: thecodingmachine/php:<< parameters.php_version >>-v4-fpm
        environment:
          PLATFORM_REGION: "uk-1.platform.sh"
          PROJECT_ROOT: "/home/docker/project"
          PHP_EXTENSION_GD: 1
          PHP_INI_MEMORY_LIMIT: 1g
    steps:
      - checkout_code:
          ssh_fingerprint: << parameters.ssh_fingerprint >>
      - composer_tasks
      - persist_to_workspace:
          root: ./
          paths:
            - ./

  coding_standards:
    parameters:
      php_version:
        type: string
      coding_standards_dirs:
        type: string
    docker:
      - image: thecodingmachine/php:<< parameters.php_version >>-v4-fpm
        environment:
          PLATFORM_REGION: "uk-1.platform.sh"
          PROJECT_ROOT: "/home/docker/project"
          PHP_EXTENSION_GD: 1
          PHP_INI_MEMORY_LIMIT: 1g
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: PHPCS analysis
          command: ${PROJECT_ROOT}/phpcs.sh ${PROJECT_ROOT} << parameters.coding_standards_dirs >>

  deprecated_code:
    parameters:
      php_version:
        type: string
      deprecated_code_dirs:
        type: string
    docker:
      - image: thecodingmachine/php:<< parameters.php_version >>-v4-fpm
        environment:
          PLATFORM_REGION: "uk-1.platform.sh"
          PROJECT_ROOT: "/home/docker/project"
          PHP_EXTENSION_GD: 1
          PHP_INI_MEMORY_LIMIT: 1g
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deprecated code check
          command: cd $PROJECT_ROOT && vendor/bin/drupal-check << parameters.deprecated_code_dirs >>

commands:
  checkout_code:
    description: "Handle composer access tokens, SSH key fingerprints and code checkout"
    parameters:
      ssh_fingerprint:
        type: string
        default: ""
    steps:
      - add_ssh_keys:
          fingerprints:
            - << parameters.ssh_fingerprint >>
      - checkout

  composer_tasks:
    description: "Validate and install dependencies using composer"
    steps:
      - run:
          name: Validate composer.json and composer.lock file for consistency
          command: composer validate --no-check-all --strict
      - restore_cache:
          keys:
            - composer-vendor-{{ checksum "composer.lock" }}
      - run:
          name: Install dependencies (if vendor/ missing)
          command: |
            if [ ! -d vendor ]; then
              composer install --no-interaction --optimize-autoloader
            else
              echo "Vendor directory exists, skipping install."
            fi
      - save_cache:
          key: composer-vendor-{{ checksum "composer.lock" }}
          paths:
            - vendor
            - ~/.composer/cache

workflows:
  build-test:
    jobs:
      - build:
          php_version: << pipeline.parameters.php_version >>
          ssh_fingerprint: << pipeline.parameters.ssh_fingerprint >>
      - coding_standards:
          requires:
            - build
          php_version: << pipeline.parameters.php_version >>
          coding_standards_dirs: << pipeline.parameters.coding_standards_dirs >>
      - deprecated_code:
          requires:
            - build
          php_version: << pipeline.parameters.php_version >>
          deprecated_code_dirs: << pipeline.parameters.deprecated_code_dirs >>