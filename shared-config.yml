version: 2.1

# PARAMETERS: injected into pipelines and continuation orb will stitch together at runtime.
parameters:
  php_version:
    type: string
    default: "8.3"
  drupal_core_version:
    type: string
    default: "10.4"

# YAML ANCHORS: re-usable snippets of YAML.
default_docker_image: &docker_image
  docker:
    - image: thecodingmachine/php:8.3-v4-fpm
      environment:
        PLATFORM_REGION: "uk-1.platform.sh"
        PROJECT_ROOT: "/home/docker/project"
        PHP_EXTENSION_GD: 1
        PHP_INI_MEMORY_LIMIT: 1g        

# Jobs; tied in to workflows (end of file).
jobs:
  # Tests the integrity of the build, stores the results in a workspace for re-use in later jobs.
  build:
    <<: *docker_image
    steps:
      - checkout_code
      - composer_tasks
      - persist_to_workspace:
          root: ./
          paths:
            - ./
  # Test for coding standards - will inherit the workspace/filesystem changes from build step, above.
  coding_standards:
    <<: *docker_image
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: PHPCS analysis
          command: |
            CHECK_DIRS="${PROJECT_ROOT}/web/modules/custom"
            CHECK_DIRS="${CHECK_DIRS} ${PROJECT_ROOT}/web/modules/origins"
            CHECK_DIRS="${CHECK_DIRS} ${PROJECT_ROOT}/web/themes/custom"
            ~/project/phpcs.sh ${PROJECT_ROOT} $CHECK_DIRS

  deprecated_code:
    <<: *docker_image
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deprecated code check
          command: |
            cd $PROJECT_ROOT
            CHECK_DIRS="${PROJECT_ROOT}/web/modules/custom"
            CHECK_DIRS="$CHECK_DIRS ${PROJECT_ROOT}/web/modules/origins"
            CHECK_DIRS="$CHECK_DIRS ${PROJECT_ROOT}/web/themes/custom"
            vendor/bin/drupal-check $CHECK_DIRS

# Re-usable commands.
commands:
  checkout_code:
    description: "Handle composer access tokens, SSH key fingerprints and code checkout"
    steps:
      # Add SSH user key so we can access related repositories as part of our initial clone + composer install command.
      # 65:4e >> GitHub user key fingerprint.
      - add_ssh_keys:
          fingerprints:
            - "65:4e:c7:ca:9f:c0:40:f7:16:2c:da:33:63:1d:90:12"
      - checkout
  composer_tasks:
    description: "Validate and install dependencies using composer"
    steps:
      - run:
          name: Validate composer.json and composer.lock file for consistency
          command: composer validate --no-check-all --strict
      - restore_cache:
          keys:
            - composer-{{ checksum "composer.lock" }}
      - run:
          name: Fetch dependencies with composer
          command: composer install --no-interaction --optimize-autoloader
      - save_cache:
          key: composer-{{ checksum "composer.lock" }}
          paths:
            - $HOME/.composer/cache

# Workflow definitions.
workflows:
  build-test:
    jobs:
      - build
      - coding_standards:
          requires:
            - build
      - deprecated_code:
          requires:
            - build